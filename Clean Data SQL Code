USE cyclistic;

SELECT *
FROM total_year;

-- Update "total_year" to replace blank cells with NULL
update total_year 
set start_station_name=NULL where start_station_name='';
update total_year 
set start_station_id=NULL where start_station_id=''; 
update total_year  
set end_station_name=NULL where end_station_name='';
update total_year  
set end_station_id=NULL where end_station_id='';

/* Clean Data */

-- Return classic and docked bike "ride_id" that have no start or end docking stations
WITH null_station_names AS
(
   SELECT ride_id AS bad_ride_id
   FROM (SELECT ride_id, start_station_name, start_station_id, 
            end_station_name, end_station_id
         FROM total_year
         WHERE rideable_type = 'docked_bike' OR rideable_type = 'classic_bike'
         ) as bike_convert
   WHERE start_station_name IS NULL AND start_station_id IS NULL OR
      end_station_name IS NULL AND end_station_id IS NULL
),

-- Return trips that do not have any NULL values
null_station_names_cleaned AS
(
   SELECT *
   FROM total_year ty
   LEFT JOIN null_station_names nsn
   ON ty.ride_id = nsn.bad_ride_id
   WHERE nsn.bad_ride_id IS NULL AND
      ty.start_lat IS NOT NULL AND
      ty.start_lng IS NOT NULL AND
      ty.end_lat IS NOT NULL AND
      ty.end_lng IS NOT NULL
),

-- Replace all instances of "docked_bike" with "classic_bike", extract the day of the week, month, and year from "started_at",
-- and return length of each trip in minutes by calculating the difference between "ended_at" and "started_at" with TIMESTAMPDIFF.
aggregated_total_year AS
(
   SELECT ride_id,
      REPLACE(rideable_type, 'docked_bike', 'classic_bike') AS ride_type,
      started_at,
      ended_at,
      starting_station_name,
      ending_station_name,
      DAYNAME(started_at) AS Day,
	  MONTHNAME(started_at) AS Month,
	  YEAR(started_at) AS Year,
	  TIMESTAMPDIFF(MINUTE,started_at, ended_at) as total_min,
      start_lat,
      start_lng,
      end_lat,
      end_lng,
      member_casual AS member_type
   FROM null_station_names_cleaned 
),

-- Return all trips between 1 minute and 24 hours in length and remove any trips specified for maintenance and data testing.
final_table AS
(
   SELECT *
   FROM aggregated_total_year 
   WHERE total_min > 1 AND
      total_min < 1440 AND
      starting_station_name <> 'DIVVY CASSETTE REPAIR MOBILE STATION' AND
      starting_station_name <> 'Lyft Driver Center Private Rack' AND 
      starting_station_name <> '351' AND 
      starting_station_name <> 'Base - 2132 W Hubbard Warehouse' AND 
      starting_station_name <> 'Hubbard Bike-checking (LBS-WH-TEST)' AND 
      starting_station_name <> 'WEST CHI-WATSON' AND 
      ending_station_name <> 'DIVVY CASSETTE REPAIR MOBILE STATION' AND
      ending_station_name <> 'Lyft Driver Center Private Rack' AND 
      ending_station_name <> '351' AND 
      ending_station_name <> 'Base - 2132 W Hubbard Warehouse' AND 
      ending_station_name <> 'Hubbard Bike-checking (LBS-WH-TEST)' AND 
      ending_station_name <> 'WEST CHI-WATSON'
)
SELECT *
FROM final_table;
